/**
 * Define json schema resource.
 * @function apemanschema
 * @param {string} [dirname="schemas"] - Directory path which contains json schemas.
 * @param {Object} [options] - Optional settings.
 * @returns {Object.<string, ASchema>} - Schemas
 */

'use strict'

const argx = require('argx')
const { pascalcase } = require('stringcase')
const fromFiles = require('./validating/from_files')

/** @lends apemanschema */
function apemanschema (dirname, options = {}) {
  let args = argx(arguments)
  options = args.pop('object') || {}
  dirname = args.shift('string') || 'schemas'

  let validators = fromFiles(dirname)

  function schemas (name) {
    let keys = Object.keys(validators)
    for (let i = 0; i < keys.length; i++) {
      let key = keys[ i ]
      let hit = (pascalcase(key) === pascalcase(name)) || (pascalcase(key) === pascalcase(name) + 'Schema')
      if (hit) {
        return validators[ key ]
      }
    }
    let notfoundMsg = `[apemanschema] Unknown name "${name}".  (Available names are ${JSON.stringify(keys)})`
    throw new Error(notfoundMsg)
  }

  Object.assign(schemas, validators)

  schemas.toJSON = function () {
    let result = {}
    Object.keys(validators).forEach((key) => {
      result[ key ] = validators[ key ].toJSON()
    })
    return result
  }

  return schemas
}

module.exports = apemanschema
